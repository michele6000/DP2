<?xml version="1.0" encoding="UTF-8"?>

<project name="BIB-Test2" default="run-tests" basedir=".">
	<description>
			Script for BIB Test 2
	</description>

	<!-- The test class specific for this assignment -->
	<property name="test2.test.class" value="it.polito.dp2.BIB.ass3.test2.tests.BibTests2" />

	<!-- The name to be given to the final zip -->
	<property name="sol.zip" value="solution.zip" />

	<!-- this script is an extension of the build.xml script of Assignment 3 -->
	<import file="build.xml"/>

	<!-- The Client1Factory for Test2 -->
	<property name="Test2.Client2Factory" value="it.polito.dp2.BIB.sol3.test2.client.Client2Factory" />

	<!-- Target runFuncTest.real NOT TO BE CALLED DIRECTLY -->
	<target name="runFuncTest.real" depends="build-client" description="internal task, not to be called directly">	
		<echo>Running Junit tests...</echo>		
		<junit printsummary="yes" dir="." fork="yes" haltonfailure="no" showoutput="no" filtertrace="true" timeout="120000">
			<jvmarg value="-Djava.awt.headless=true" />
			<sysproperty key="it.polito.dp2.BIB.ass3.URL " value="${URL}" />
			<sysproperty key="it.polito.dp2.BIB.ass3.PORT" value="${PORT}"/>
			<sysproperty key="it.polito.dp2.BIB.ass3.ClientFactory" value="it.polito.dp2.BIB.sol3.client.ClientFactory" />
			<sysproperty key="it.polito.dp2.BIB.ass3.test2.Client2Factory" value="${Test2.Client2Factory}"/>
			<formatter type="xml" usefile="true"/>
			<formatter type="plain" usefile="false"/>
			<test haltonfailure="no" failureproperty="test_failed" outfile="testout" name="${test2.test.class}"
				methods="testAddAllFewItems,testAddAllMoreItems,testAddItemsToDestroyedBookshelf,
					testCreateBookshelf,testBookShelfOperations,testRemoveItemFromBibliography,testNumberOfReads,testNonExistingBookshelf" />
			<classpath>
				<path refid="test.classpath" />
			</classpath>
		</junit>
		<fail if="test_failed" status="126" message="*** Junit tests specific for this Final Test: Some Tests FAILED ***"/>
		<echo>*** Junit tests: All Tests PASSED  ***</echo>
	</target>

	<!--target for building the final zip containing the solution -->
	<target name="make-zip" description="Make zip to be submitted for this test">
		<zip destfile="${sol.zip}" 
			basedir="${ass3.location}" 
			includes="${sol.build.file} answers.txt custom/**/* xsd/**/* doc/**/* WebContent/**/* ${sol1.dir}/**/* ${sol2.dir}/**/* ${sol3.dir}/**/*" />
	</target>
</project>
